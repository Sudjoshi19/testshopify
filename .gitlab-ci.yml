stages:
  - Google Client Operations
  - Generate Manifests
  - Copy DBT code

workflow:
  rules:
    - if: $CLIENT_ID && $TARGET == 'bigquery' && $KEYFILE_PATH
      variables:
        VARS: "{target_variable: bigquery, snowflake_database_flag: False}"
    - if: $CLIENT_ID && $TARGET == 'snowflake'
      variables:
        VARS: "{target_variable: snowflake, snowflake_database_flag: True}"

copy_config_files:
  stage: Google Client Operations
  image: gcr.io/google.com/cloudsdktool/google-cloud-cli:latest
  before_script:
    - gcloud auth activate-service-account sa-dev-cloud-storage@edm-saras.iam.gserviceaccount.com --key-file=$DEV_CLOUD_STORAGE_KEY
  script:
    - gcloud storage cp gs://dev-config-scripts/base-config/copy_files.py copy_files.py
    - gcloud storage cp gs://dev-config-scripts/base-dags/dynamic_task_groups.py dynamic_task_groups.py
    - gcloud storage cp gs://dev-config-scripts/base-dags/template_generator.py template_generator.py
    - ls -l
    - pwd
  artifacts:
    # paths:
    #   - copy_files.py
    untracked: true
    expire_in: 1 hour

generate_manifests:
  dependencies:
    - copy_config_files
  stage: Generate Manifests
  image: ubuntu:22.04
  before_script:
    - apt-get upgrade
    - apt-get update -y
    - apt install python3 -y
    - apt-get install python3-pip -y
    - python3 --version # Check python version
    - python3 -m pip install --upgrade dbt-core
    - python3 -m pip install --upgrade dbt-bigquery
    - dbt --version # Check if dbt is intalled properly
    - cat $KEYFILE_PATH > keyfile.json
  script:
    - dbt deps --project-dir . # Install package dependencies
    - dbt compile --vars "${VARS}" --project-dir . --profiles-dir ./profiles --profile edm_data_transformation --target ${TARGET} --target-path edm_data_transformation/target
  artifacts:
    untracked: true
    expire_in: 1 hour

run_python_script:
  # rules:
  #   - when: manual
  stage: Copy DBT code
  image: python:3.11.1-slim
  dependencies:
    - generate_manifests
    # - copy_config_files
  before_script:
    - mkdir dags
    - ls -l
    - python template_generator.py
    - rm template_generator.py
    - rm dynamic_task_groups.py
    - ls -l
  script:
    - ls -l
    - pip install google-cloud-storage python-dotenv
    - python copy_files.py
    - ls -l
  after_script:
    - rm copy_files.py
